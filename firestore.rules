rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSessionOwner(sessionId, uid) {
      return get(/databases/$(database)/documents/sessions/$(sessionId)).data.owner == uid;
    }

    match /games/{document=**} {
      allow read: if request.auth != null;
      allow write;
    }

    match /shareCodes/{sessionId} {
      allow read:  if request.auth != null && isSessionOwner(sessionId, request.auth.uid)
      allow write: if request.auth != null && isSessionOwner(sessionId, request.auth.uid)
    }

    match /shareIds/{shareCode} {
      allow get:  if request.auth != null
      allow write: if request.auth != null && isSessionOwner(request.resource.data.sessionId, request.auth.uid)
    }
    
    match /sessions/{document} {
    	allow create, delete: if
      	request.auth != null && 
        request.auth.uid == request.resource.data.owner;    
      allow read, update: if 
        request.auth != null && 
        (resource.data.shared || request.auth.uid == resource.data.owner);
    }

    match /{document=**} {
    	allow create: if
      	request.auth != null && 
        request.auth.uid == request.resource.data.owner;    
      allow read, write, delete, update: if 
        request.auth != null && 
        request.auth.uid == resource.data.owner;
    }
  }
}